---
author: emoteit
ms.author: danazhu
title: Tips + Q&A
description: "A place to reference tips and common questions"
ms.service: minecraft-bedrock-edition
ms-date: 09/04/2025
---

# Tips + Q & A

## Save your structures with structure void blocks instead of air
Air will override blocks at the location the structure places in, whereas 
structure void allows existing blocks to remain unchanged.

## How to best utilize 'weights'
`weights` are used to determine the probability of an object. A large number does 
not guarantee an increased probability. Rather, the denominator is determined by 
all the weights added together. A smaller number (eg. 1) will suffice.

## Advice on Terrain-Matching

### Background
Terrain matching means the structure can adapt to the terrain.
This is in contrast with Rigid, which means the structure doesn't adapt to the terrain.
More information can be found under `"projection"`: 
[Jigsaw Template Pools](../../Reference/Content/WorldgenReference/Examples/JigsawTemplatePools.md)

### The Bane of Terrain Matching: Verticality
If we look at the diagram below, there are two structures along a slope. 

![Terrain Matching Along a Slope](../images/terrain.png)

Terrain matching works in this way:
#### Scenario 1: 
If dark blue structure is already placed and the light blue structure is 
terrain-matching. Since light blue is terrain matching, it needs to find the 
highest block of the heightmap to attach to. Given that it's building left from 
the cliff, the highest block is then the dark blue. As such, light blue would 
place on top of dark blue.

#### Scenario 2: 
If dark blue structure is terrain-matching and light blue structure is already 
placed. When dark blue is placing, since it's terrain matching, it looks for the 
highest block it can place on, which happens to be light blue. As such, dark blue 
terrain matches by placing on top of light blue.

This even occurs in Vanilla (this system is at parity with Java), but with 
tweaking, they're able to build in a way they want by minimizing the frequency of 
such unexpected collisions. With how terrain-matching is in Java / Bedrock, this will 
happen regardless if there is collision detection. What this means for you: there 
inevitably will need to be tweaking to minimize such collisions.

Conclusion:
The best way to approach this is from a design standpoint since the algorithm is 
quite simple to keep it lightweight:
Design:
* have fewer pieces that might loop back on itself (frequent hard turns)
* if it's going to be frequent, these should dead end quickly so they won't 
  interfere with each other

Workaround (if needed):
* if you increase the height of the structure saved, will need to work with 
  max_distance_from_center as well since that controls how far the structure can 
  build from its start piece vertically (it's like a box around it)
* however, if the structure is saved with a tall height that surpasses the 
  `"max_distance_from_center"`, the piece won't place
* so increasing the height might actually prevent pieces that would normally place 
  from placing

## Common Questions
### How does terrain matching determine where to place?
It searches from the top of the dimension, which is why terrain matching isn't 
that useful in the nether (where there's a ceiling).

### If I have a structure that’s tall in the y level, let’s say 64, would that 
have a greater chance of preventing overlaps with terrain matching? 
If the structure is saved with taller height (e.g. has more saved space above the 
structure), it might prevent structures from placing directly on top. However, 
that's not a catch all solution. When the world goes to place your structure, the 
tall structure height may exceed the bounds determined by your 
`"max_distance_from_center"`, preventing the structure from being placed. 

### Will adjusting dimension padding help with making tweaks to terrain matching?
Dimension padding wouldn't help here since that's mainly padding between the 
structure and the vertical constraints of the world.

### I'm still having trouble with terrain matching even after trying all of the above
Some creators have found it helpful to have some jigsaws dedicated to "connecting"
and other jigsaws dedicated to "placing". 

### My structure looks unexpected when placed in water
Applying waterlogging to your jigsaw might help.
In the Structures json, you can add: `"liquid_settings": "apply_waterlogging"`
