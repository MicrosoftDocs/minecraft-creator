{
  "id": "minecraft:behavior.transport_items",
  "fields": [],
  "generatedFromSchema_doNotEdit": {
    "id": "minecraft:behavior.transport_items",
    "title": "Entity Transport Items Behavior",
    "description": "A behavior that enables a mob to transport items from and to containers.",
    "fields": [
      {
        "id": "allow_simultaneous_interaction",
        "title": "Allow Simultaneous Interaction",
        "description": "When true the mob will wait until a container is not used by other entities before starting to interact with it. Default value: false.",
        "dataType": 1
      },
      {
        "id": "allowed_items",
        "title": "Allowed Items",
        "description": "A list of item descriptors that are the only items the mob is allowed to transport. If this and \"disallowed_items\" are both empty, then all items are allowed. If non-empty \"disallowed_items\" must be empty. Default value: empty.",
        "dataType": 2,
        "alternates": [
          {
            "id": "allowed_items",
            "dataType": 24
          }
        ]
      },
      {
        "id": "control_flags",
        "title": "Control Flags",
        "dataType": 17
      },
      {
        "id": "destination_container_types",
        "description": "A list of block descriptors that should be a container type to put items in. Default value: empty.",
        "dataType": 15,
        "subForm": {
          "id": "destination_container_types",
          "title": "Destination Container Types",
          "fields": [
            {
              "id": "name",
              "title": "Name",
              "dataType": 2
            },
            {
              "id": "states",
              "title": "States",
              "dataType": 0,
              "alternates": [
                {
                  "id": "states",
                  "dataType": 2
                },
                {
                  "id": "states",
                  "dataType": 1
                }
              ]
            },
            {
              "id": "tags",
              "title": "Tags",
              "dataType": 2
            }
          ]
        },
        "alternates": [
          {
            "id": "destination_container_types",
            "dataType": 2
          },
          {
            "id": "destination_container_types",
            "dataType": 16
          }
        ]
      },
      {
        "id": "disallowed_items",
        "title": "Disallowed Items",
        "description": "A list of item descriptors that are the mob is not allowed to transport. If non-empty \"allowed_items\" must be empty. Default value: emtpy.",
        "dataType": 2,
        "alternates": [
          {
            "id": "disallowed_items",
            "dataType": 24
          }
        ]
      },
      {
        "id": "idle_cooldown",
        "title": "Idle Cooldown",
        "description": "When the mob cannot find a container in which to get or put items, the goal will stop being active for this amount of time in seconds. Default value: 20.",
        "dataType": 0
      },
      {
        "id": "initial_cooldown",
        "title": "Initial Cooldown",
        "description": "How long the mob will wait after spawning or getting the goal added before the goal can start. Default value: 0.",
        "dataType": 0
      },
      {
        "id": "interaction_time",
        "title": "Interaction Time",
        "description": "The amount of time in seconds spent interacting with the containers. Default value: 3.",
        "dataType": 3
      },
      {
        "id": "max_stack_size",
        "title": "Max Stack Size",
        "description": "The maximum stack size that the mob will try to take from a container. Default value: 64.",
        "dataType": 0,
        "validity": [
          {
            "comparison": ">=",
            "value": 1
          },
          {
            "comparison": "<=",
            "value": 64
          }
        ]
      },
      {
        "id": "max_visited_containers",
        "title": "Max Visited Containers",
        "description": "The maximum number of containers that the mob will try to take/place items from before going on cooldown and starting over. Default value: 16.",
        "dataType": 0
      },
      {
        "id": "place_strategy",
        "title": "Place Strategy",
        "description": "The strategy to use for placing the transported item. Any - always place if there is room, With matching - place if there is a matching item in the container, With matching or empty - like With matching but will also place in empty containers Default value: any.",
        "dataType": 2
      },
      {
        "id": "priority",
        "title": "Priority",
        "dataType": 0
      },
      {
        "id": "search_distance",
        "title": "Search Distance",
        "description": "The maximum search distance horizontally and vertically at which to find containers for taking or placing items. Default value: Vec2(64,32).",
        "dataType": 32,
        "alternates": [
          {
            "id": "search_distance",
            "dataType": 16,
            "subForm": {
              "id": "search_distance",
              "title": "Search Distance",
              "fields": [
                {
                  "id": "x",
                  "title": "X",
                  "dataType": 3
                },
                {
                  "id": "y",
                  "title": "Y",
                  "dataType": 3
                }
              ]
            }
          }
        ]
      },
      {
        "id": "search_strategy",
        "title": "Search Strategy",
        "description": "The strategy to use for finding source or destination containers. The nearest valid container or a random valid container in range. Default value: random.",
        "dataType": 2
      },
      {
        "id": "source_container_types",
        "description": "A list of block descriptors that should be a container type to get items from. Default value: empty.",
        "dataType": 15,
        "subForm": {
          "id": "source_container_types",
          "title": "Source Container Types",
          "fields": [
            {
              "id": "name",
              "title": "Name",
              "dataType": 2
            },
            {
              "id": "states",
              "title": "States",
              "dataType": 0,
              "alternates": [
                {
                  "id": "states",
                  "dataType": 2
                },
                {
                  "id": "states",
                  "dataType": 1
                }
              ]
            },
            {
              "id": "tags",
              "title": "Tags",
              "dataType": 2
            }
          ]
        },
        "alternates": [
          {
            "id": "source_container_types",
            "dataType": 2
          },
          {
            "id": "source_container_types",
            "dataType": 16
          }
        ]
      }
    ]
  }
}